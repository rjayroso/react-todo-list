{"version":3,"sources":["components/pages/About.js","components/layout/Header.js","components/Todo/TodoItem.js","components/Todo/Todos.js","components/Todo/AddTodo.js","App.js","index.js"],"names":["About","Fragment","headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Header","style","to","btnStyle","border","borderRadius","cursor","float","TodoItem","props","todoitem","id","title","borderBottom","completed","type","onChange","toggleComplete","bind","this","onClick","deleteTodoItem","Todos","todos","map","key","AddTodo","useState","setTodoTitle","onSubmit","event","preventDefault","addTodoItem","display","name","placeholder","flex","value","target","className","App","setTodos","axios","post","then","res","data","delete","filter","useEffect","length","get","exact","path","render","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"uPAYeA,MAVf,WACI,OACI,kBAAC,IAAMC,SAAP,KACI,qCACA,mKACA,wJCKZ,IAAMC,EAAc,CAChBC,WAAY,OACZC,MAAO,OACPC,UAAW,SACXC,QAAS,QAGPC,EAAY,CACdH,MAAO,OACPI,eAAgB,QAGLC,EArBf,WACI,OACI,4BAAQC,MAAOR,GACX,wCACA,kBAAC,IAAD,CAAMQ,MAAOH,EAAWI,GAAG,qBAA3B,QAFJ,MAEiE,kBAAC,IAAD,CAAMD,MAAOH,EAAWI,GAAG,0BAA3B,WC6BzE,IAAMC,EAAW,CACbT,WAAY,UACZC,MAAO,OACPS,OAAQ,OACRP,QAAS,WACTQ,aAAc,MACdC,OAAQ,UACRC,MAAO,SAGIC,EA3Cf,SAAkBC,GAAO,MAaCA,EAAMC,SAApBC,EAba,EAabA,GAAIC,EAbS,EAaTA,MAEZ,OACI,yBAAKX,MAbE,CACHP,WAAY,UACZG,QAAS,OACTgB,aAAc,kBACdd,eAAgBU,EAAMC,SAASI,UAC/B,eAAiB,SASjB,2BACI,2BAAOC,KAAK,WAAWC,SAAUP,EAAMQ,eAAeC,KAAKC,KAAMR,KAChEC,EACD,4BAAQX,MAAOE,EAAUiB,QAASX,EAAMY,eAAeH,KAAKC,KAAMR,IAAlE,QCDDW,MAlBf,SAAeb,GACX,OAAOA,EAAMc,MAAMC,KAAI,SAACd,GAAD,OACnB,kBAAC,EAAD,CACIe,IAAKf,EAASC,GACdD,SAAUA,EACVO,eAAgBR,EAAMQ,eACtBI,eAAgBZ,EAAMY,qBC8BnBK,MArCf,SAAiBjB,GAAQ,IAAD,EACUkB,mBAAS,IADnB,mBACbf,EADa,KACNgB,EADM,KAapB,OACI,0BAAMC,SAPV,SAAkBC,GACdA,EAAMC,iBACNtB,EAAMuB,YAAYpB,GAClBgB,EAAa,KAIa3B,MAAO,CAAEgC,QAAS,SACxC,2BACIlB,KAAK,OACLmB,KAAK,QACLC,YAAY,eACZlC,MAAO,CAAEmC,KAAM,KAAMvC,QAAS,OAC9BwC,MAAOzB,EACPI,SAlBZ,SAAkBc,GACdF,EAAaE,EAAMQ,OAAOD,UAmBtB,2BACItB,KAAK,SACLsB,MAAM,SACNE,UAAU,MACVtC,MAAO,CAAEmC,KAAM,S,uBCqDhBI,MAvEf,WAAgB,IAAD,EACab,mBAAS,IADtB,mBACNJ,EADM,KACCkB,EADD,KAUb,SAAST,EAAYpB,GACnB8B,IAAMC,KAAK,6CAA8C,CACvD/B,MAAOA,EACPE,WAAW,IAEV8B,MAAK,SAAAC,GAAG,OAAIJ,EAAS,GAAD,mBAAKlB,GAAL,CAAYsB,EAAIC,WAazC,SAAS7B,EAAeN,GACtB8B,EAASlB,EAAMC,KAAI,SAAAd,GAKjB,OAJGA,EAASC,KAAOA,IACjBD,EAASI,WAAaJ,EAASI,WAG1BJ,MAIX,SAASW,EAAeV,GACtB+B,IAAMK,OAAN,qDAA2DpC,IACxDiC,MAAK,SAAAC,GAAG,OAAIJ,EAASlB,EAAMyB,QAAO,SAAAtC,GAAQ,OACzCA,EAASC,KAAOA,SAQtB,OA9CAsC,qBAAU,WACa,IAAjB1B,EAAM2B,QACRR,IAAMS,IAAI,wDACPP,MAAK,SAAAC,GAAG,OAAIJ,EAASI,EAAIC,YA4C9B,kBAAC,IAAD,KACE,yBAAKP,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,oBAAoBC,OAAQ,SAAA7C,GAAK,OACjD,kBAAC,IAAMjB,SAAP,KACE,kBAAC,EAAD,CAASwC,YAAaA,IACtB,kBAAC,EAAD,CACET,MAAOA,EACPN,eAAgBA,EAChBI,eAAgBA,QAItB,kBAAC,IAAD,CAAOgC,KAAK,yBAAyBE,UAAWhE,QCxE1DiE,IAASF,OACP,kBAAC,IAAMG,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.14b88c06.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction About() {\r\n    return (\r\n        <React.Fragment> \r\n            <h1>About</h1>\r\n            <p>This is the TodoList app v1.0.0. This is a mini React project of mine which I have learned from a course provided by Traversy Media.</p>\r\n            <p>NOTE: This React app pulls from a free online REST API to populate the todo list (https://jsonplaceholder.typicode.com)</p>\r\n        </React.Fragment>        \r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1>TodoList</h1>\r\n            <Link style={linkStyle} to=\"/react-todo-list/\">Home</Link> | <Link style={linkStyle} to=\"/react-todo-list/about\">About</Link>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    background: '#333',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\nconst linkStyle = {\r\n    color: '#fff',\r\n    textDecoration: 'none'\r\n}\r\n\r\nexport default Header;","import React  from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TodoItem(props) {\r\n\r\n    function getStyle() {\r\n        return {\r\n            background: '#f4f4f4',\r\n            padding: '10px',\r\n            borderBottom: '1px #ccc dotted',\r\n            textDecoration: props.todoitem.completed ?\r\n            'line-through' : 'none'\r\n        };\r\n    }    \r\n\r\n    // destructure\r\n    const { id, title } = props.todoitem;\r\n\r\n    return (\r\n        <div style={getStyle()}>\r\n            <p>\r\n                <input type='checkbox' onChange={props.toggleComplete.bind(this, id)}/>\r\n                {title}\r\n                <button style={btnStyle} onClick={props.deleteTodoItem.bind(this, id)}>x</button>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\n// PropTypes\r\nTodoItem.propTypes = {\r\n    todoitem: PropTypes.object.isRequired,\r\n    toggleComplete: PropTypes.func.isRequired,\r\n    deleteTodoItem: PropTypes.func.isRequired\r\n}\r\n\r\nconst btnStyle = {\r\n    background: '#ff0000',\r\n    color: '#fff',\r\n    border: 'none',\r\n    padding: '5px 10px',\r\n    borderRadius: '50%',\r\n    cursor: 'pointer',\r\n    float: 'right'\r\n};\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Todos(props) {\r\n    return props.todos.map((todoitem) => (\r\n        <TodoItem \r\n            key={todoitem.id} \r\n            todoitem={todoitem} \r\n            toggleComplete={props.toggleComplete}\r\n            deleteTodoItem={props.deleteTodoItem}\r\n        />\r\n    ));\r\n}\r\n\r\n// PropTypes\r\nTodos.propTypes = {\r\n    todos: PropTypes.array.isRequired,\r\n    toggleComplete: PropTypes.func.isRequired,\r\n    deleteTodoItem: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Todos;","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction AddTodo(props) {\r\n    const [title, setTodoTitle] = useState('');\r\n\r\n    function onChange(event) {\r\n        setTodoTitle(event.target.value);\r\n    }\r\n\r\n    function onSubmit(event) {\r\n        event.preventDefault();\r\n        props.addTodoItem(title);\r\n        setTodoTitle('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} style={{ display: 'flex' }}>\r\n            <input \r\n                type=\"text\" \r\n                name=\"title\" \r\n                placeholder=\"Add Todo ...\"\r\n                style={{ flex: '10', padding: '5px' }}\r\n                value={title}\r\n                onChange={onChange}\r\n            />\r\n            <input \r\n                type=\"submit\" \r\n                value=\"Submit\"\r\n                className=\"btn\"\r\n                style={{ flex: '1' }}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddTodo.propTypes = {\r\n    addTodoItem: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddTodo;","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport About from './components/pages/About';\nimport Header from './components/layout/Header';\nimport Todos from './components/Todo/Todos';\nimport AddTodo from './components/Todo/AddTodo';\n// import { v4 as uuid } from 'uuid';\nimport axios from 'axios';\n\n\nimport './App.css';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    if (todos.length === 0) {\n      axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n        .then(res => setTodos(res.data));\n    }\n  });\n\n  function addTodoItem(title) {\n    axios.post('https://jsonplaceholder.typicode.com/todos', {\n      title: title,\n      completed: false\n    })\n      .then(res => setTodos([...todos, res.data]));\n\n    /*\n    const newTodo = {\n      id: uuid(),\n      title: title,\n      completed: false\n    }\n\n    setTodos([...todos, newTodo]);\n    */\n  }\n\n  function toggleComplete(id) {\n    setTodos(todos.map(todoitem => {\n      if(todoitem.id === id) {\n        todoitem.completed = !todoitem.completed;\n      }\n\n      return todoitem;\n    }));\n  }\n\n  function deleteTodoItem(id) {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n      .then(res => setTodos(todos.filter(todoitem =>\n        todoitem.id !== id)));\n\n    /*\n    setTodos(todos.filter(todoitem =>\n      todoitem.id !== id));\n    */\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"container\">\n          <Header />\n          <Route exact path=\"/react-todo-list/\" render={props => (\n            <React.Fragment>\n              <AddTodo addTodoItem={addTodoItem}/>\n              <Todos \n                todos={todos} \n                toggleComplete={toggleComplete} \n                deleteTodoItem={deleteTodoItem}\n              />\n            </React.Fragment>\n          )} />\n          <Route path=\"/react-todo-list/about\" component={About} />\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}